{"version":3,"file":"select-autocomplete.js.map","sources":["ng://select-autocomplete/lib/select-autocomplete.service.ts","ng://select-autocomplete/lib/select-autocomplete.component.ts","ng://select-autocomplete/lib/select-autocomplete.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelectAutocompleteService {\n\n  constructor() { }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'mat-select-autocomplete',\n  template: `\n  <mat-form-field appearance=\"{{appearance}}\">\n    <mat-select #selectElem [disabled]=\"disabled\" [placeholder]=\"placeholder\" [formControl]=\"formControl\" [multiple]=\"multiple\"\n    [(ngModel)]=\"selectedValue\" (selectionChange)=\"onSelectionChange($event)\">\n    <div class=\"box-search\">\n        <mat-checkbox *ngIf=\"multiple\" color=\"primary\" class=\"box-select-all\" [(ngModel)]=\"selectAllChecked\"\n        (change)=\"toggleSelectAll($event)\"></mat-checkbox>\n        <input #searchInput type=\"text\" [ngClass]=\"{'pl-1': !multiple}\" (input)=\"filterItem(searchInput.value)\"  placeholder=\"Search...\">\n        <div class=\"box-search-icon\" (click)=\"filterItem(''); searchInput.value = ''\">\n          <button mat-icon-button class=\"search-button\">\n            <mat-icon class=\"mat-24\" aria-label=\"Search icon\">clear</mat-icon>\n          </button>\n        </div>\n      </div>\n      <mat-select-trigger>\n        {{onDisplayString()}}\n      </mat-select-trigger>\n        <mat-option *ngFor=\"let option of options\" [disabled]=\"option.disabled\" [value]=\"option[value]\"\n          [style.display]=\"hideOption(option) ? 'none': 'flex'\">{{option[display]}}\n        </mat-option>\n    </mat-select>\n    <mat-hint style=\"color:red\" *ngIf=\"showErrorMsg\">{{errorMsg}}</mat-hint>\n  </mat-form-field>\n  `,\n  styles: [\n    `\n    .box-search {\n      margin: 8px;\n      border-radius: 2px;\n      box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.16), 0 0 0 1px rgba(0, 0, 0, 0.08);\n      transition: box-shadow 200ms cubic-bezier(0.4, 0, 0.2, 1);\n      display: flex;\n    }\n    .box-search input {\n      flex: 1;\n      border: none;\n      outline: none;\n    }\n    .box-select-all {\n      width: 36px;\n      line-height: 33px;\n      color: #808080;\n      text-align: center;\n    }\n    .search-button {\n      width: 36px;\n      height: 36px;\n      line-height: 33px;\n      color: #808080;\n    }\n    .pl-1 {\n      padding-left: 1rem;\n    }`\n  ]\n})\nexport class SelectAutocompleteComponent implements OnChanges {\n\n  @Input()\n  placeholder;\n  @Input()\n  options;\n  @Input()\n  disabled = false;\n  @Input()\n  display;\n  @Input()\n  value;\n  @Input()\n  formControl = new FormControl();\n  @Input()\n  errorMsg = '';\n  @Input()\n  showErrorMsg = false;\n  @Input()\n  selectedOptions;\n  @Input()\n  multiple = true;\n\n  // New Options\n  @Input()\n  labelCount = 1;\n  @Input()\n  appearance = 'standard';\n\n  @Output()\n  selectionChange: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('selectElem') selectElem;\n\n  filteredOptions: Array<any> = [];\n  selectedValue: Array<any> = [];\n  selectAllChecked = false;\n  displayString = '';\n  constructor() { }\n\n  ngOnChanges() {\n    this.filteredOptions = this.options;\n    if (this.selectedOptions) {\n      this.selectedValue = this.selectedOptions;\n    } else if (this.formControl.value) {\n      this.selectedValue = this.formControl.value;\n    }\n  }\n\n  toggleDropdown() {\n    this.selectElem.toggle();\n  }\n\n  toggleSelectAll = function(val) {\n    if (val.checked) {\n      this.filteredOptions.forEach(option => {\n        if (!this.selectedValue.includes(option[this.value])) {\n          this.selectedValue = this.selectedValue.concat([option[this.value]]);\n        }\n      });\n    } else {\n      const filteredValues = this.getFilteredOptionsValues();\n      this.selectedValue = this.selectedValue.filter(\n        item => !filteredValues.includes(item)\n      );\n    }\n    this.selectionChange.emit(this.selectedValue);\n  };\n\n  filterItem(value) {\n    this.filteredOptions = this.options.filter(\n      item => item[this.display].toLowerCase().indexOf(value.toLowerCase()) > -1\n    );\n    this.selectAllChecked = true;\n    this.filteredOptions.forEach(item => {\n      if (!this.selectedValue.includes(item[this.value])) {\n        this.selectAllChecked = false;\n      }\n    });\n  }\n\n  hideOption(option) {\n    return !(this.filteredOptions.indexOf(option) > -1);\n  }\n\n  // Returns plain strings array of filtered values\n  getFilteredOptionsValues() {\n    const filteredValues = [];\n    this.filteredOptions.forEach(option => {\n      filteredValues.push(option.value);\n    });\n    return filteredValues;\n  }\n\n  onDisplayString() {\n    this.displayString = '';\n    if (this.selectedValue && this.selectedValue.length) {\n      let displayOption = [];\n      if (this.multiple) {\n        // Multi select display\n        for (let i = 0; i < this.labelCount; i++) {\n          displayOption[i] = this.options.filter(\n            option => option.value === this.selectedValue[i]\n          )[0];\n        }\n        if (displayOption.length) {\n          for (let i = 0; i < displayOption.length; i++) {\n            this.displayString += displayOption[i][this.display] + ',';\n          }\n          this.displayString = this.displayString.slice(0, -1);\n          if (this.selectedValue.length > 1) {\n            this.displayString += ` (+${this.selectedValue.length - this.labelCount} others)`;\n          }\n        }\n      } else {\n        // Single select display\n        displayOption = this.options.filter(\n          option => option.value === this.selectedValue\n        );\n        if (displayOption.length) {\n          this.displayString = displayOption[0][this.display];\n        }\n      }\n    }\n    return this.displayString;\n  }\n\n  onSelectionChange(val) {\n    const filteredValues = this.getFilteredOptionsValues();\n    let count = 0;\n    if (this.multiple) {\n      this.selectedValue.filter(item => {\n        if (filteredValues.includes(item)) {\n          count++;\n        }\n      });\n      this.selectAllChecked = count === this.filteredOptions.length;\n    }\n    this.selectedValue = val.value;\n    this.selectionChange.emit(this.selectedValue);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { SelectAutocompleteComponent } from './select-autocomplete.component';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule, MatCheckboxModule} from '@angular/material';\n\n@NgModule({\n  imports: [BrowserAnimationsModule, MatFormFieldModule, MatSelectModule, FormsModule, ReactiveFormsModule,\n    MatIconModule, MatCheckboxModule, MatButtonModule],\n  declarations: [SelectAutocompleteComponent],\n  exports: [SelectAutocompleteComponent]\n})\nexport class SelectAutocompleteModule { }\n"],"names":[],"mappings":"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"}
